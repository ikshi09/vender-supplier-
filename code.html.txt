<script type="text/babel">
    function VendorDashboard() {
        const [suppliers, setSuppliers] = React.useState([]);
        const [selectedSuppliers, setSelectedSuppliers] = React.useState([]);
        const [isVerified, setIsVerified] = React.useState(false);

        // Fetch suppliers from backend
        React.useEffect(() => {
            fetch('https://your-backend.onrender.com/api/suppliers')
                .then(response => response.json())
                .then(data => setSuppliers(data))
                .catch(error => console.error('Error fetching suppliers:', error));
        }, []);

        // Verify PM SVANidhi (mock)
        const verifyVendor = () => {
            fetch('https://your-backend.onrender.com/api/verify-pmsvanidhi', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ vendorId: '123', loanDocument: 'doc1' }),
            })
                .then(response => response.json())
                .then(data => {
                    setIsVerified(data.verified);
                    alert(data.message);
                })
                .catch(error => console.error('Error verifying vendor:', error));
        };

        // Handle adding supplier
        const addSupplier = (supplier) => {
            if (!isVerified) {
                alert('Please verify your PM SVANidhi status first.');
                return;
            }
            if (!selectedSuppliers.find(s => s.id === supplier.id)) {
                setSelectedSuppliers([...selectedSuppliers, supplier]);
            }
        };

        // Handle pre-order
        const handlePreOrder = (supplier) => {
            fetch('https://your-backend.onrender.com/api/preorder', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ vendorId: '123', supplierId: supplier.id }),
            })
                .then(response => response.json())
                .then(data => alert(data.message))
                .catch(error => console.error('Error placing pre-order:', error));
        };

        // Calculate profit
        const calculateProfit = (supplier) => {
            return (supplier.pricePerUnit * supplier.discount).toFixed(2);
        };

        return (
            <div className="min-h-screen bg-gray-100 p-6">
                <h1 className="text-3xl font-bold text-center mb-6">Vendor Dashboard</h1>
                
                {/* Verification Button */}
                <div className="mb-8">
                    <button
                        onClick={verifyVendor}
                        className="bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600"
                    >
                        Verify PM SVANidhi Status
                    </button>
                    {isVerified && <p className="text-green-600 mt-2">Vendor Verified!</p>}
                </div>

                {/* Supplier List */}
                <div className="mb-8">
                    <h2 className="text-2xl font-semibold mb-4">Available Suppliers</h2>
                    <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                        {suppliers.map(supplier => (
                            <div key={supplier.id} className="bg-white p-4 rounded-lg shadow-md">
                                <h3 className="text-xl font-bold">{supplier.name}</h3>
                                <p className="text-gray-600">Category: {supplier.category}</p>
                                <p className="text-gray-600">Price per Unit: ₹{supplier.pricePerUnit}</p>
                                <p className="text-green-600">Potential Profit: ₹{calculateProfit(supplier)}</p>
                                <button
                                    onClick={() => addSupplier(supplier)}
                                    className="mt-2 bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600"
                                >
                                    Add to Dashboard
                                </button>
                            </div>
                        ))}
                    </div>
                </div>

                {/* Selected Suppliers Dashboard */}
                <div>
                    <h2 className="text-2xl font-semibold mb-4">Your Selected Suppliers</h2>
                    {selectedSuppliers.length === 0 ? (
                        <p className="text-gray-500">No suppliers selected yet.</p>
                    ) : (
                        <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                            {selectedSuppliers.map(supplier => (
                                <div key={supplier.id} className="bg-white p-4 rounded-lg shadow-md">
                                    <h3 className="text-xl font-bold">{supplier.name}</h3>
                                    <p className="text-gray-600">Category: {supplier.category}</p>
                                    <p className="text-gray-600">Price per Unit: ₹{supplier.pricePerUnit}</p>
                                    <p className="text-green-600">Potential Profit: ₹{calculateProfit(supplier)}</p>
                                    <button
                                        onClick={() => handlePreOrder(supplier)}
                                        className="mt-2 bg-green-500 text-white px-4 py-2 rounded hover:bg-green-600"
                                    >
                                        Pre-Order
                                    </button>
                                </div>
                            ))}
                        </div>
                    )}
                </div>
            </div>
        );
    }

    ReactDOM.render(<VendorDashboard />, document.getElementById('root'));
</script>