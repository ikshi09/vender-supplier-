"use client";

import { useEffect, useState } from "react";
import { Card, CardHeader, CardTitle, CardDescription, CardContent } from "@/components/ui/card";

interface Offer {
  id: number;
  title: string;
  description: string;
  discountPercent: number;
  originalPrice: number;
  finalPrice: number;
  supplierName: string;
  category: string;
  validUntil: string;
}

export default function VendorDashboard() {
  const [status, setStatus] = useState<{ verified: boolean; message: string } | null>(null);
  const [offers, setOffers] = useState<Offer[]>([]);
  const [loadingOffers, setLoadingOffers] = useState(false);

  // Fetch verification status
  useEffect(() => {
    fetch("/api/verify")
      .then((res) => res.json())
      .then((data) => setStatus(data))
      .catch((err) => console.error("Error fetching verification:", err));
  }, []);

  // Fetch offers if verified
  useEffect(() => {
    if (status?.verified) {
      setLoadingOffers(true);
      fetch("/api/offers")
        .then((res) => res.json())
        .then((data) => {
          setOffers(data);
          setLoadingOffers(false);
        })
        .catch((err) => {
          console.error("Error fetching offers:", err);
          setLoadingOffers(false);
        });
    }
  }, [status]);

  return (
    <div className="container mx-auto px-4 py-8">
      <h1 className="text-3xl font-bold mb-4">Supplier Dashboard</h1>

      {status === null ? (
        <p>Loading verification status...</p>
      ) : status.verified ? (
        <>
          <p className="text-green-600 mb-4">âœ… {status.message}</p>
          <h2
